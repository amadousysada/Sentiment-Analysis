{{- if .Values.mlflow.enabled }}
# ---------------------------
# MLflow Deployment + Service
# ---------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      containers:
        - name: mlflow
          image: {{ .Values.mlflow.image }}
          ports:
            - containerPort: 5000
          env:
            - name: MLFLOW_S3_ENDPOINT_URL
              value: http://minio:9000
            - name: BACKEND_STORE_URI
              value: {{ .Values.mlflow.backendStoreUri }}
            - name: ARTIFACT_ROOT
              value: {{ .Values.mlflow.artifactRoot }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_user
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_password
      imagePullSecrets:
        - name: dockerhub-secret
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
spec:
  selector:
    app: mlflow
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP

# ---------------------------
# PostgreSQL Deployment + PVC + Service
# ---------------------------
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.storage }}
  storageClassName: hcloud-volumes

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  service_name: "mlflow-postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: mlflow-postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: mlflow-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  ClusterIP: None
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  #type: ClusterIP

# ---------------------------
# MinIO StatefulSet + PVC + Service
# ---------------------------
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.minio.storage }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  serviceName: "minio"
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      initContainers:
        - name: create-bucket
          image: minio/mc:latest
          command:
            - /bin/sh
            - -c
            - |
              mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD && \
              mc mb -p myminio/mlflow || echo "bucket already exists"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_password
      containers:
        - name: minio
          image: minio/minio
          args:
            - server
            - /data
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sentiments-stack-secrets
                  key: minio_password
          ports:
            - containerPort: 9000
            - containerPort: 9001  # console
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  ports:
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: console
      protocol: TCP
      port: 9001
      targetPort: 9001
  type: LoadBalancer
{{- end }}
